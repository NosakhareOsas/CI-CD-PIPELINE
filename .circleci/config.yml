# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"


  print-great:
    docker:
      - image: circleci/node:13.8.0
    steps:
     - checkout
     - run:
        name: i want to print great
        command: echo great

  print-man:
    docker:
      - image: circleci/node:13.8.0
    steps:
     - checkout
     - run:
        name: "i want to print great"
        command: "echo man"

  enr-var-print:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - run:
          name: Print enviroment variable author
          command: |
            echo ${AUTHOR_NAME}

  save_hello_world_output:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - run:
          name: Create first file
          command: |
            mkdir -p workspace
            echo "MY FIRST FILE IS HERE" > workspace/firstFile.txt
      - persist_to_workspace:
          root: ./workspace
          paths:
            - firstFile.txt

  print_output_file:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - attach_workspace:
          at: ./workspace
      - run:
          name: Read first file
          command: |
            cat firstFile.txt
      


    

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows

workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      - print-great
      - print-man:
          requires: 
            - print-great
      - enr-var-print
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output
